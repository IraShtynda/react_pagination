{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","isFirstPage","isLastPage","pagesButtons","className","cn","disabled","href","onClick","map","page","active","handlePageChange","items","App","useState","setCurrentPage","setPerPage","visibleItems","lastIndex","slice","getVisibleItems","firstItem","lastItem","length","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBE,EAC7BK,EAAehB,EAAW,EAAGW,GAoBnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUL,IAHhB,SAME,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QA/BiB,WAClBP,GACHJ,EAAaD,EAAc,IAwBzB,oBAWDO,EAAaM,KAAI,SAAAC,GAAI,OACpB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASd,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBArCM,SAACE,GACpBd,IAAgBc,GAClBb,EAAaa,GAmCQE,CAAiBF,IAJlC,SAMGA,KAZEA,MAiBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUJ,IAHhB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA7DiB,WAClBN,GACHL,EAAaD,EAAc,IAsDzB,wBC9EFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAWPuB,EAAgB,WAC3B,MAAsCC,mBAVrB,GAUjB,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAA8BD,mBAVP,GAUvB,mBAAOpB,EAAP,KAAgBsB,EAAhB,KAWMC,EAnBgB,SAACvB,EAAiBC,GACxC,IAAMuB,EAAYxB,EAAUC,EAE5B,OAAOiB,EAAMO,MAAMD,EAAYxB,EAASwB,GAgBnBE,CAAgB1B,EAASC,GAExC0B,GAAa1B,EAAc,GAAKD,EAAU,EAE1C4B,EAAW3B,EAAcD,EAAUkB,EAAMW,OAC3CX,EAAMW,OACN5B,EAAcD,EAElB,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC0B,EADjC,cACgDC,EADhD,eAC+DV,EAAMW,OADrE,OAIA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAO/B,EACPgC,SAhCiB,SAACC,GAC1BX,EAAWY,OAAOD,EAAME,OAAOJ,QAC/BV,EAfe,IAwCT,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOmB,EAAMW,OACb7B,QAASA,EACTC,YAAaA,EACbC,aA7Ce,SAACa,GACpBM,EAAeN,MA+Cb,6BACGQ,EAAaT,KAAI,SAAAuB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC5EjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5aef6d1e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pagesCount;\n  const pagesButtons = getNumbers(1, pagesCount);\n\n  const handlePrevButton = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextButton = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePageChange = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          { disabled: isFirstPage },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevButton}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesButtons.map(page => (\n        <li\n          key={page}\n          className={cn(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          { disabled: isLastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst FIRST_PAGE = 1;\nconst DEFAULT_PER_PAGE = 5;\n\nconst getVisibleItems = (perPage: number, currentPage: number) => {\n  const lastIndex = perPage * currentPage;\n\n  return items.slice(lastIndex - perPage, lastIndex);\n};\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(FIRST_PAGE);\n  const [perPage, setPerPage] = useState(DEFAULT_PER_PAGE);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(FIRST_PAGE);\n  };\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const visibleItems = getVisibleItems(perPage, currentPage);\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n\n  const lastItem = currentPage * perPage > items.length\n    ? items.length\n    : currentPage * perPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}